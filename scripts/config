#!/bin/sh

if [ $(id -u) -ne "0" ] ; then
  echo "WARNING: Non-root user: skipping config"
  exit
fi

# Copy deployment.cfg
[ -e /config/deployment.cfg ] && cp /config/deployment.cfg /kb/deployment/deployment.cfg

# Add the ssl certs into the certificate tree
if [ -e /config/ssl ] ;then
    PC=/config/ssl/proxy.crt
    cat $PC  >> /etc/ssl/certs/ca-certificates.crt
    cat $PC > /etc/ssl/certs/`openssl x509 -noout -hash -in $PC`.0
    cat $PC  >> /usr/local/lib/python2.7/dist-packages/requests/cacert.pem
    cat $PC  >> /etc/ssl/certs/ca-certificates.crt
    cat $PC > /etc/ssl/certs/`openssl x509 -noout -hash -in $PC`.0
    keytool -noprompt -storepass changeit -importcert --trustcacerts -file $PC  -keystore /usr/lib/jvm/java-7-oracle/jre/lib/security/cacerts 
    keytool -noprompt -storepass changeit -importcert --trustcacerts -file $PC  -keystore /kb/runtime/glassfish3/glassfish/lib/templates/cacerts.jks
fi

# Fix up shock and awe
/kb/scripts/config_shock
/kb/scripts/config_awe
[ -e /mnt/Shock/logs ] || mkdir -p /mnt/Shock/logs

# Fix up Transform - Disabled and moved to SDK
#sed -i 's/ssl_verify = True/ssl_verify = False/' /kb/deployment/lib/biokbase/Transform/script_utils.py
#/kb/scripts/config_Transform

# Fix up URLs in clients and configs

# Get the hostname and trim any port
PUBLIC=$(grep baseurl= /kb/deployment/deployment.cfg|sed 's/baseurl=//'|sed 's/:.*//')

# Get ports
PUBLIC_SSL_PORT=$(grep base.ssl.port=  /kb/deployment/deployment.cfg|sed 's/base.ssl.port=//')
PUBLIC_PORT=$(grep base.port=  /kb/deployment/deployment.cfg|sed 's/base.port=//')

# Set URL base names for SSL and non-SSL
if [ -z $PUBLIC_SSL ] || [ "$PUBLIC_SSL"= "443" ] ; then
  PUBLICSSL="$PUBLIC"
else
  PUBLICSSL="${PUBLIC}:${PUBLIC_SSL}"
fi

if [ -z $PUBLIC_PORT ] || [ "$PUBLIC_PORT"= "80" ] ; then
  PUBLICNONSSL="${PUBLIC}"
else
  PUBLICNONSSL="${PUBLIC}:${PUBLIC_PORT}"
fi


sed -i "s|api-url=$|api-url=https://$PUBLICSSL/services/shock-api|" /kb/deployment//services/shock_service/conf/shock.cfg 
sed -i "s|public.hostname.org:8443|$PUBLICSSL|" /kb/deployment/lib/biokbase/*/Client.py
sed -i "s|public.hostname.org:8443|$PUBLICSSL|" /kb/deployment/lib/Bio/KBase/*/Client.pm
sed -i "s|public.hostname.org:8443|$PUBLICSSL|" /kb/deployment/lib/javascript/*/Client.js
NARRATIVE_URL=$(./scripts/get_config /kb/deployment/deployment.cfg narrative service-url|sed 's|http.*://||'|sed 's|/||')

if [ -e /kb/deployment/services/kbase-ui ] ; then
sed -i "s|public.hostname.org:8443|$PUBLICSSL|" /kb/deployment/services/kbase-ui/modules/config/service.yml
sed -i "s|narrative.kbase.us|$NARRATIVE_URL|" /kb/deployment/services/kbase-ui/modules/config/service.yml
sed -i "s|narrative.kbase.us|$NARRATIVE_URL|" /kb/deployment/services/kbase-ui/search/config.json
fi

grep -lr public.hostname.org /kb/deployment/*bin/ /kb/deployment/lib/ /kb/deployment/services/ | \
   xargs sed -i "s|public.hostname.org:8443|$PUBLICSSL|g"
