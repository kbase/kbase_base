#!/usr/bin/env perl

use Config::IniFiles;
use strict;

# Read config
my $section='awe';
my $cfg = Config::IniFiles->new( -file => "/kb/deployment/deployment.cfg" );
my $scfg;
for my $p ( $cfg->Parameters($section){
  $scfg->{$p}=$cfg->val($section,$p);
}

# Fix up config
my $file="/kb/deployment/services/shock_service/conf/shock.cfg";


my $mcfg=new Config::IniFiles( -file => $file) or die "Unable to open $file".$Config::IniFiles::errors[0];
$mcfg->newval('Address','api-port',$scfg->{'service-port'});
$mcfg->setval('Admin','email',$scfg->{'admin-email'}) if defined $scfg->{'admin-email'};
$mcfg->newval('Admin','users',$scfg->{'admin-users'}) if defined $scfg->{'admin-users'};

$mcfg->setval('Mongodb','hosts',$scfg->{'mongodb-host'});
$mcfg->newval('Mongodb','database',$scfg->{'mongodb-database'});
$mcfg->newval('Mongodb','user',$scfg->{'mongodb-user'});
$mcfg->newval('Mongodb','password',$scfg->{'mongodb-pwd'});

$mcfg->setval('Paths','site',$scfg->{'site'});
$mcfg->setval('Paths','data',$scfg->{'data'});
$mcfg->setval('Paths','logs',$scfg->{'logs'});

$mcfg->setval('Runtime','GOMAXPROCS',$scfg->{services}->{shock}->{'gomaxprocs'});

$mcfg->WriteConfig($file);

